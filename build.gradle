buildscript {
    ext {
        corda_release_group = 'net.corda'
        corda_release_version = '4.3'
        corda_gradle_plugins_version = '4.0.42'
        kotlin_version = '1.2.71'
        junit_version = '4.12'
        quasar_version = '0.7.10'
        slf4j_version = '1.7.25'
        log4j_version = '2.15.0'
        corda_platform_version = '4'
        tokens_release_group='com.r3.corda.lib.tokens'
        tokens_sdk_version='1.0'
        confidential_id_release_group = "com.r3.corda.lib.ci"
        confidential_id_release_version = "1.0"
    }

    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
        maven { url 'https://jitpack.io' }
        maven { url "https://software.r3.com/artifactory/corda-dev" }
        maven { url "https://software.r3.com/artifactory/corda-releases" }
        maven { url 'https://software.r3.com/artifactory/corda-lib' }
        maven { url 'https://software.r3.com/artifactory/corda-lib-dev' }
        maven { url "https://repo.gradle.org/gradle/libs-releases-local" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
    }
}

plugins {
    id "com.jfrog.artifactory" version "4.7.5"
}

allprojects {
    version "$confidential_id_release_version"
    group "$confidential_id_release_group"
    apply plugin: 'kotlin'

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven { url 'https://software.r3.com/artifactory/corda-lib' }
        maven { url 'https://software.r3.com/artifactory/corda-lib-dev' }
        maven { url 'https://software.r3.com/artifactory/corda-releases' }
        maven { url "https://repo.gradle.org/gradle/libs-releases-local" }
        maven { url 'https://jitpack.io' }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            languageVersion = "1.2"
            apiVersion = "1.2"
            jvmTarget = "1.8"
            javaParameters = true   // Useful for reflection.
        }
    }

    jar {
        // This makes the JAR's SHA-256 hash repeatable.
        preserveFileTimestamps = false
        reproducibleFileOrder = true
    }
}

apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
}
cordapp {
    signing {
        enabled false
    }
    info {
        name "Confidential Identities - New"
        vendor "Corda Open Source"
        targetPlatformVersion corda_platform_version.toInteger()
        minimumPlatformVersion corda_platform_version.toInteger()
    }
}

dependencies {
    // Corda dependencies.
    cordaCompile "$corda_release_group:corda-core:$corda_release_version"
    cordaCompile "$corda_release_group:corda-node-api:$corda_release_version"
    cordaRuntime "$corda_release_group:corda:$corda_release_version"

    // CorDapp dependencies.
    cordapp project(":workflows")

    cordaCompile "org.apache.logging.log4j:log4j-slf4j-impl:${log4j_version}"
    cordaCompile "org.apache.logging.log4j:log4j-web:${log4j_version}"
    cordaCompile "org.slf4j:jul-to-slf4j:$slf4j_version"
}

def publishProjects = [project(":workflows")]

configure(publishProjects) { subproject ->
    apply plugin: 'kotlin'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.artifactory'

    task sourceJar(type: Jar, dependsOn: subproject.classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: subproject.javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    task install(dependsOn: 'publishToMavenLocal')

    publishing {
        publications {
            create(subproject.name, MavenPublication) {
                from components.java

                groupId subproject.group
                artifactId subproject.jar.baseName
                artifact tasks.sourceJar
                artifact tasks.javadocJar

                pom {
                    description = subproject.description
                }
            }
        }
    }
}

artifactory {
    publish {
        contextUrl = 'https://software.r3.com/artifactory'
        repository {
            repoKey = 'corda-lib'
            username = System.getenv('CORDA_ARTIFACTORY_USERNAME') ?: System.getProperty('corda.artifactory.username')
            password = System.getenv('CORDA_ARTIFACTORY_PASSWORD') ?: System.getProperty('corda.artifactory.password')
        }

        defaults {
            if (publishProjects.contains(project)) {
                publications(project.name)
            }
        }
    }
}

wrapper {
    gradleVersion = "4.10.2"
    distributionType = Wrapper.DistributionType.ALL
}

task installQuasar(type: Copy) {
    destinationDir rootProject.file("lib")
    from(configurations.quasar) {
        rename 'quasar-core(.*).jar', 'quasar.jar'
    }
}
